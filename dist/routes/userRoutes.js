import { Router } from "express";
import newUser from "../controllers/user/auth/newUser.js";
import login from "../controllers/user/auth/login.js";
import verifyUser from "../controllers/user/auth/verifyUser.js";
import isAuthenticated from "../middlewares/authenticated.js";
import authenticated from "../controllers/user/auth/authenticated.js";
import isAdmin from "../middlewares/isAdmin.js";
import updateUserRole from "../controllers/user/update/updateUserRole.js";
import { errorHandler } from "../middlewares/errorHandler.js";
import isPayment from "../middlewares/isPayment.js";
import isSale from "../middlewares/isSale.js";
import getAllUsers from "../controllers/user/getAllUsers.js";
const usersRouter = Router();
usersRouter.post('/signup', errorHandler(newUser));
usersRouter.post('/login', errorHandler(login));
usersRouter.get('/verify', errorHandler(verifyUser));
usersRouter.get('/all', errorHandler(isAdmin), errorHandler(getAllUsers));
usersRouter.get('/auhtenticated', errorHandler(isAuthenticated), errorHandler(authenticated));
usersRouter.get('/admin', errorHandler(isAdmin), errorHandler(authenticated));
usersRouter.get('/payment', errorHandler(isPayment), errorHandler(authenticated));
usersRouter.get('/sale', errorHandler(isSale), errorHandler(authenticated));
usersRouter.patch('/role/:id', errorHandler(isAdmin), errorHandler(updateUserRole));
export default usersRouter;
